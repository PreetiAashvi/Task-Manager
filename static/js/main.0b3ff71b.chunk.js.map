{"version":3,"sources":["context/TaskListContext.js","component/Task.js","component/TaskList.js","component/TaskForm.js","component/Header.js","component/App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","_useState","useState","_useState2","Object","slicedToArray","tasks","setTasks","useEffect","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","json","wrap","_context","prev","next","fetch","method","headers","AuthToken","sent","t0","console","log","stop","apply","this","arguments","fetchData","_useState3","_useState4","editItem","setEditItem","react_default","a","createElement","Provider","value","addTask","title","concat","toConsumableArray","id","uuid","removeTask","_ref2","_callee2","formdata","_context2","FormData","append","body","deleteData","clearList","findItem","item","find","task","editTask","newTasks","map","children","Task","_useContext","useContext","className","message","onClick","TaskList","length","component_Task","key","TaskForm","setTitle","onSubmit","e","preventDefault","TaskForm_regeneratorRuntime","editData","addData","onChange","target","type","placeholder","required","Header","App","context_TaskListContext","component_Header","component_TaskForm","component_TaskList","ReactDOM","render","component_App","document","getElementById"],"mappings":"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","file":"static/js/main.0b3ff71b.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport uuid from \"uuid/dist/v4\";\r\n\r\nexport const TaskListContext = createContext();\r\n\r\nconst TaskListContextProvider = (props) => {\r\n  const initialState = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n\r\n  const [tasks, setTasks] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    \r\n///todo hide api key \r\n    const url = \"https://devza.com/tests/tasks/list\";\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(url,{\r\n                    method:\"GET\",\r\n                    headers:{'AuthToken':'UrM4YHgb1FcqEf1tuKwmAMMX5MxFZ12a'}\r\n                });\r\n                const json = await response.json();\r\n                setTasks(json.tasks)\r\n                \r\n            } catch (error) {\r\n                console.log(\"error\", error);\r\n            }\r\n        };\r\n        fetchData();\r\n  \r\n}, [tasks]);\r\n\r\n  const [editItem, setEditItem] = useState(null);\r\n\r\n  const addTask = (title) => {\r\n    setTasks([...tasks, { title, id: uuid() }]);\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    const deleteData = async () => {\r\n        try {\r\n          const url = \"https://devza.com/tests/tasks/delete\";\r\n          \r\n          var formdata = new FormData();\r\n          formdata.append(\"taskid\",id);\r\n///todo hide api key\r\n          const response = await fetch(url, {\r\n            method: \"POST\",\r\n            headers: { AuthToken: \"UrM4YHgb1FcqEf1tuKwmAMMX5MxFZ12a\" },\r\n            body: formdata,\r\n          });\r\n\r\n\r\n        } catch (error) {\r\n          console.log(\"error\", error);\r\n        }\r\n    }\r\n    deleteData();\r\n    //setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  const clearList = () => {\r\n    setTasks([]);\r\n  };\r\n\r\n  const findItem = (id) => {\r\n    const item = tasks.find((task) => task.id === id);\r\n    setEditItem(item);\r\n  };\r\n\r\n  const editTask = (title, id) => {\r\n    const newTasks = tasks.map((task) =>\r\n      task.id === id ? { title, id } : task\r\n    );\r\n\r\n    setTasks(newTasks);\r\n    setEditItem(null);\r\n  };\r\n\r\n  return (\r\n    <TaskListContext.Provider\r\n      value={{\r\n        tasks,\r\n        addTask,\r\n        removeTask,\r\n        clearList,\r\n        findItem,\r\n        editTask,\r\n        editItem,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TaskListContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TaskListContextProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { TaskListContext } from \"../context/TaskListContext\";\r\n\r\nconst Task = ({ task }) => {\r\n  const { removeTask, findItem } = useContext(TaskListContext);\r\n\r\n  return (\r\n    <li className=\"list-item\">\r\n      <span>{task.message}</span>\r\n      <div>\r\n        <button\r\n          onClick={() => removeTask(task.id)}\r\n          className=\"btn-delete task-btn\"\r\n        >\r\n          <i className=\"fas fa-trash-alt\"></i>\r\n        </button>\r\n        <button onClick={() => findItem(task.id)} className=\"btn-edit task-btn\">\r\n          <i className=\"fas fa-pen\"></i>\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React, {useContext} from 'react';\r\nimport {TaskListContext} from \"../context/TaskListContext\";\r\nimport Task from \"./Task\";\r\n\r\nconst TaskList = () => {\r\n    const {tasks} = useContext(TaskListContext);\r\n  return (\r\n  <div>\r\n     {tasks.length ? (\r\n        <ul className=\"list\">\r\n          {tasks.map((task) => {\r\n             return <Task task={task} key= {task.id} />;\r\n             })}\r\n            </ul>\r\n        ): (\r\n            <div className='no=tasks'>No Tasks</div>\r\n        )}\r\n  \r\n  </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { TaskListContext } from \"../context/TaskListContext\";\r\n\r\nconst TaskForm = () => {\r\n  const { addTask, clearList, editItem, editTask } = useContext(\r\n    TaskListContext\r\n  );\r\n\r\n  const [message, setTitle] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!editItem) {\r\n      const addData = async () => {\r\n        try {\r\n          const url = \"https://devza.com/tests/tasks/create\";\r\n\r\n          var formdata = new FormData();\r\n          formdata.append(\"message\", message);\r\n///todo hide api key\r\n          const response = await fetch(url, {\r\n            method: \"POST\",\r\n            headers: { AuthToken: \"UrM4YHgb1FcqEf1tuKwmAMMX5MxFZ12a\" },\r\n            body: formdata,\r\n          });\r\n\r\n\r\n        } catch (error) {\r\n          console.log(\"error\", error);\r\n        }\r\n      };\r\n      addData();\r\n\r\n      setTitle(\"\");\r\n    } else {\r\n        const editData = async () => {\r\n            try {\r\n              const url = \"https://devza.com/tests/tasks/update\";\r\n              \r\n              var formdata = new FormData();\r\n              formdata.append(\"message\", message);\r\n              formdata.append(\"taskid\",editItem.id);\r\n ///todo hide api key   \r\n              const response = await fetch(url, {\r\n                method: \"POST\",\r\n                headers: { AuthToken: \"UrM4YHgb1FcqEf1tuKwmAMMX5MxFZ12a\" },\r\n                body: formdata,\r\n              });\r\n    \r\n                console.log(response)\r\n            } catch (error) {\r\n              console.log(\"error\", error);\r\n            }\r\n        }\r\n        editData();\r\n        \r\n      editTask(message, editItem.id);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editItem) {\r\n        \r\n      setTitle(editItem.message);\r\n    } else {\r\n      setTitle(\"\");\r\n    }\r\n  }, [editItem]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form\">\r\n      <input\r\n        onChange={handleChange}\r\n        value={message}\r\n        type=\"text\"\r\n        className=\"task-input\"\r\n        placeholder=\"Add Task...\"\r\n        required\r\n      />\r\n      <div className=\"buttons\">\r\n        <button type=\"submit\" className=\"btn add-task-btn clear-btn\">\r\n          {editItem ? \"Edit Task\" : \"Add Task\"}\r\n        </button>\r\n        {/* <button onClick={clearList} className=\"btn clear-btn\">\r\n          Clear\r\n        </button> */}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className='header'>\r\n       <h1>Task Manager</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react'\r\nimport TaskList from './TaskList';\r\nimport TaskForm from './TaskForm';\r\nimport Header from './Header';\r\nimport TaskListContextProvider from '../context/TaskListContext';\r\nimport '../App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n   <TaskListContextProvider>\r\n    <div className='container'>\r\n        <div className='app-wrapper'>\r\n           <Header />\r\n            <div className='main'>\r\n                <TaskForm />\r\n                <TaskList />\r\n            </div>\r\n        </div>\r\n    </div>\r\n   </TaskListContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}